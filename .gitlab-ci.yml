image: cirrusci/flutter:stable
stages:
- analyze
- build
- test
- deploy

build_linux:
  stage: build
  before_script:
  - sudo apt update && sudo apt install curl clang cmake ninja-build pkg-config libgtk-3-dev
    libblkid-dev liblzma-dev libsecret-1-dev libjsoncpp-dev libwebkit2gtk-4.0-dev -y
  script:
  - flutter config --enable-linux-desktop
  - flutter clean
  - flutter pub get
  - flutter packages pub run build_runner build --delete-conflicting-outputs
  - flutter build linux --release
  artifacts:
    when: on_success
    paths:
    - build/linux/x64/release/bundle/
  tags:
  - shared

build_android_bundle:
  stage: build
  script:
  - echo $KEYSTORE_FILE | base64 -d > android/app/keystore.jks
  - echo $KEYSTORE_PROPERTIES | base64 -d > android/key.properties
  - flutter clean
  - flutter pub get
  - flutter packages pub run build_runner build --delete-conflicting-outputs
  - flutter build appbundle --release
  artifacts:
    when: on_success
    paths:
    - build/app/outputs/bundle/release/app-release.aab
  tags:
  - shared

build_android_apk:
  stage: build
  script:
  - echo $KEYSTORE_FILE | base64 -d > android/app/keystore.jks
  - echo $KEYSTORE_PROPERTIES | base64 -d > android/key.properties
  - flutter clean
  - flutter pub get
  - flutter packages pub run build_runner build --delete-conflicting-outputs
  - flutter build apk --release
  artifacts:
    when: on_success
    paths:
    - build/app/outputs/flutter-apk/app-release.apk
  tags:
  - shared

build_web:
  stage: build
  script:
  - flutter clean
  - flutter pub get
  - flutter packages pub run build_runner build --delete-conflicting-outputs
  - flutter build web --release
  artifacts:
    when: on_success
    paths:
    - build/web/
  tags:
  - shared

deploy_web:
  image: debian:buster
  stage: deploy
  before_script:
  - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
  - which rsync || ( apt-get update -y && apt-get install rsync -y )
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -t rsa $HOST >> ~/.ssh/known_hosts
  script:
  - rsync -az build/web/ $USER@$HOST:app --delete
  only:
  - main

deploy_android_fdroid:
  image: debian:buster
  stage: deploy
  before_script:
  - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
  - which rsync || ( apt-get update -y && apt-get install rsync -y )
  - which pcregrep || ( apt-get update -y && apt-get install pcregrep -y )
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -t rsa $HOST >> ~/.ssh/known_hosts
  script:
  - cd build/app/outputs/flutter-apk/
  - export UPDATE_VERSION=$(pcregrep -o1 'version:\s([0-9]*\.[0-9]*\.[0-9]*)\+[0-9]*'
    ../../../../pubspec.yaml) && mv app-release.apk "fr.henri2h.minestrix_${UPDATE_VERSION}.apk"
  - rsync -raz  ./ $USER@$HOST:fdroid/repo
  - ssh $USER@$HOST -t '/bin/bash -i -l -c  "cd fdroid && fdroid update"'
  only:
  - main

analyze:
  stage: analyze
  script:
  - flutter clean
  - flutter pub get
  - flutter packages pub run build_runner build
  # - flutter analyze
  - flutter format lib/ --set-exit-if-changed
  tags:
  - shared

.release:
  stage: deploy
  image: curlimages/curl:latest
  tags:
    - shared
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
    - if: '$CI_COMMIT_TAG =~ /^rc\d+\.\d+\.\d+-\d+$/'
  before_script:
    - export RELEASE_TYPE=$(echo $CI_COMMIT_TAG | grep -oE "[a-z]+")
    - export RELEASE_VERSION=$(echo $CI_COMMIT_TAG | grep -oE "\d+\.\d+\.\d+")
    - export PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/minestrix/${RELEASE_VERSION}"

upload_android:
  extends: .release
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/android/app-release.apk ${PACKAGE_REGISTRY_URL}/minestrix.apk

upload_web:
  extends: .release
  script:
    # workaround bug of Flutter engine
    - tar czf package.tar.gz --ignore-failed-read -C build/web/ .
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file package.tar.gz ${PACKAGE_REGISTRY_URL}/minestrix-web.tar.gz

upload_linux_x86:
  extends: .release
  script:
    - tar czf package.tar.gz -C build/linux/x64/release/bundle/ .
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file package.tar.gz ${PACKAGE_REGISTRY_URL}/minestrix-linux-x86.tar.gz

release:
  extends: .release
  image: registry.gitlab.com/gitlab-org/release-cli:latest

  script:
    - |
      release-cli create --name "Release ${CI_COMMIT_TAG}" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"minestrix.apk\",\"url\":\"${PACKAGE_REGISTRY_URL}/minestrix.apk\"}" \
        --assets-link "{\"name\":\"minestrix-linux-x86.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}/minestrix-linux-x86.tar.gz\"}" \
        --assets-link "{\"name\":\"minestrix-web.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}/minestrix-web.tar.gz\"}"
